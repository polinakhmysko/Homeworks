--Задача 1
--Преобразуйте таблицу в 1НФ, объяснив, что нарушает первую нормальную форму.

--клиент	адрес	телефон
--Иван		Москва	+7900...
--Иван		Москва	+7921...

--Данные должны быть атомарными (неделимыми), каждое поле содержит только одно значение.



--Задача 2
--Определите, находится ли следующая таблица в 2НФ. Если нет — приведите к 2НФ
--и объясните, какая зависимость нарушает нормальную форму.

--ID_заказа		ID_клиента	Сумма_заказа
--101			1			500
--102			1			300

--ID_клиента	Имя
--1				Иван

--Вынесли данные о клиенте в отдельную таблицу для устранения частичной зависимости.
--В 2НФ все неключевые атрибуты должны зависеть только от первичного ключа.



--Задача 3
--Проверьте, находится ли таблица ниже в 3НФ. Если нет — преобразуйте её
--и объясните тип зависимости, которая нарушает 3НФ.

--ID_сотрудника	ID_отдела
--1				1
--2				1
--3				2

--ID_отдела	Отдел	Руководитель_отдела
--1			IT		Алексей
--2			HR		Ольга

--Не должно быть транзитивных зависимостей 
--(неключевые атрибуты не должны зависеть от других неключевых атрибутов).



--Задача 4
-- - Выявите все аномалии и зависимости.
-- - Приведите структуру к 3НФ, создав соответствующие таблицы.
-- - Предложите первичные и внешние ключи.

--Клиент_ID(PK)		Имя				Город
--100				Иван			Москва

--Заказ_ID(PK)	Клиент_ID(FK)	Товар_ID(FK)	Дата_заказа
--1				100				501				2023-01-01
--2				100				502				2023-01-02

--Товар_ID(PK)		Название_товара		Цена
--501				Книга				400
--502				Ручка				50



--Задача 5
--Описание системы управления библиотекой:
-- - Каждый читатель может взять несколько книг.
-- - У каждой книги есть авторы (может быть несколько).
-- - Для каждого выданного экземпляра книги указывается дата выдачи и возврата.

--Таблицы в 3НФ:
--1. Readers
-- Reader_ID		Name	Email

--2. Authors
-- Author_ID	Name

--3. Books
-- Book_ID		Author_ID	Title

--4. Borrowings
-- Borrowing_ID		Reader_ID	Book_ID		Borrrowing_date		Return_date

--ER-диаграмма в доп. файле.



--Задача 6
-- - Создайте денормализованную таблицу, объединяющую данные о клиенте и заказе.
-- - Объясните, какие преимущества даёт такая структура.
-- - Какие проблемы могут возникнуть при обновлении?

--ID_заказа		ID_клиента		Имя		Город				Сумма	Дата
--10			1				Петр	Санкт-Петербург		500		2025-05-01
--11			2				Мария	Москва				300		2025-05-02

--Такая структура позволит ускорить запросы, так как не нужно будет использовать соединение таблиц.
--При этом увеличится объем данных и могут возникнуть сложности с поддержанием их целостности.
--Например, при изменении информации о городе клиента необходимо будет обновить все записи с заказами данного клиента
--(из-за большого объема данных обновление может занять много времени, а также есть вероятность упустить некоторые записи
--и нарушить целостность данных).